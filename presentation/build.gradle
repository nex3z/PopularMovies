apply plugin: 'com.android.application'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        applicationId "com.nex3z.popularmovies"
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        variant.buildConfigField "String", "API_KEY", "\"" + getApiKey() + "\""
    }
}

static def getApiKey() {
    Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['API_KEY']
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':domain')

    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies


    testImplementation presentationTestDependencies.jUnit
    androidTestImplementation(presentationTestDependencies.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation presentationDependencies.supportAppcompatV7
    implementation presentationDependencies.supportDesign
    implementation presentationDependencies.recyclerView
    implementation presentationDependencies.constraintLayout
    implementation presentationDependencies.rxAndroid
    implementation presentationDependencies.butterKnife
    annotationProcessor presentationDependencies.butterKnifeCompiler
    implementation presentationDependencies.swipy
}
